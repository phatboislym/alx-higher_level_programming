#!/usr/bin/python3
"""
a module, Square
defines a square.
"""


class Square:
    """
    class Square that defines a square by:
    Private instance attribute: size
    Instantiation with size (int).
    """

    def __init__(self, size=0):
        """
        initializes the square
        Args:
            size (int): the size of the new square.
        """
        if (type(size) is not int):
            raise TypeError("size must be an integer")
        elif (size < 0):
            raise ValueError("size must be >= 0")
        else:
            self.__size = size

    def area(self):
        """
        returns the current square area
        """
        return (self.__size**2)

    def my_print(self):
        """
        prints the square with the # character
        """
        for i in range(self.__size):
            [print("#", end='') for j in range(self.__size)]
            print('')
        if self.__size == 0:
            print('')

    @property
    def position(self):
        """
        gets or sets the position of the square
        """
        return self.__position

    @position.setter
    def position(self, value):
        if (not isinstance(value, tuple) or
            len(value) != 2 or
                not all(isinstance(num, int) for num in value) or
                not all(num >= 0 for num in value)):
            raise TypeError("position must be a tuple of 2 positive integers")
        self.__position = value

    def area(self):
        """
        returns area of the square
        """
        return (self.__size ** 2)

    def my_print(self):
        """
        prints the square with the character #
        """

        if self.__size == 0:
            print("")
            return
        else:
            for i in range(self.__position[1]):
                print("")
                print("")
                return

            for i in range(self.__position[1]):
                print("")

            for x in range(self.__size):
                for y in range(self.__position[0]):
                    print(" ", end="")
                for z in range(self.__size):
                    print("#", end="")
                print("")
